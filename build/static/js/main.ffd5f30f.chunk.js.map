{"version":3,"sources":["components/Settings/Settings.module.css","components/Settings/CycleInput.module.css","components/Layout/SoundEnableWidget.module.css","components/Layout/Header.module.css","components/UI/Modal.module.css","components/Settings/CycleList.module.css","components/Timer/TimerBlock.module.css","components/Settings/VoiceSelect.module.css","components/Info/Info.module.css","components/Timer/Timer.module.css","components/Timer/TimerDisplay.module.css","components/UI/ToggleSwitch.module.css","components/Layout/Frame.module.css","components/Timer/TimerButtons.module.css","components/UI/Button.module.css","messageConfig.js","store/settings-slice.js","store/index.js","api/functions.js","components/Layout/Header.jsx","components/Layout/Frame.jsx","hooks/use-timer.js","hooks/use-voice.js","components/Timer/TimerBlock.jsx","components/Timer/TimerDisplay.jsx","components/UI/Button.jsx","components/Timer/TimerButtons.jsx","components/Layout/SoundEnableWidget.jsx","components/Timer/Timer.jsx","components/UI/Modal.jsx","components/UI/ToggleSwitch.jsx","components/Settings/VoiceSelect.jsx","components/Settings/CycleList.jsx","components/Settings/CycleInput.jsx","components/Settings/Settings.jsx","components/Settings/CycleSettings.jsx","components/Info/dp-170x170.jpg","components/Info/Info.jsx","App.jsx","index.jsx"],"names":["module","exports","messages","DEFAULT_CYCLE","type","seconds","message","darkModeEnabled","window","matchMedia","matches","settingsSlice","createSlice","name","initialState","cycle","voiceName","soundOn","round","darkMode","darkModeSet","reducers","setSettings","state","action","payload","incrementRound","resetRound","setSoundOn","setDarkMode","setVoiceName","addToCycle","push","removeFromCycle","splice","settingsActions","actions","store","configureStore","reducer","settings","formatSeconds","time","Header","props","className","s","header","wrap","aria-hidden","buttonwrap","onClick","onModalOpen","bind","button","aria-label","Frame","frame","children","DEFAULT_TIMER_STATE","index","isTicking","requiresReset","startTime","timerReducer","endTime","Math","floor","Date","getTime","newCycle","map","block","newIndex","newIsTicking","newEndTime","newRequiresReset","NOW","document","title","useTimer","dispatch","useDispatch","settingsCycle","useSelector","useReducer","timerState","dispatchTimer","startTimer","useCallback","stopTimer","resetTimer","useEffect","interval","setInterval","clearInterval","useVoice","synth","useRef","useState","voice","setVoice","updateVoices","browserVoiceArray","current","getVoices","find","item","speechSynthesis","onvoiceschanged","playVoice","utterance","SpeechSynthesisUtterance","lang","pitch","rate","volume","speak","stopVoice","pause","cancel","TimerBlock","isActive","isFinished","blockIsFinished","displayTime","BlockTag","zero","TimerDisplay","activeIndex","list","key","random","Button","otherProps","TimerButtons","startHandler","onStart","stopHandler","onStop","resetHandler","onReset","disabled","React","memo","portalElement","getElementById","SoundEnableWidget","ReactDOM","createPortal","text","warning","buttonbox","onEnable","Timer","currentBlock","nextBlock","timer","console","log","setTimeout","clearTimeout","mobileSoundEnabled","setMobileSoundEnabled","content","empty","length","isMobile","enabled","wrapper","Backdrop","backdrop","onClose","ModalOverlay","close","tint","modal","Modal","keyListener","e","keyCode","addEventListener","removeEventListener","ToggleSwitch","id","checked","isChecked","onChange","event","onToggle","target","VoiceSelect","currentVoiceName","onVoiceSelect","voices","setVoices","select","value","newVoice","filter","option","CycleItem","onRemove","secondsDisplay","CycleList","listContent","removeBlockHandler","onRemoveBlock","typeOptions","roundResetTimer","CycleInput","typeRef","errorMessage","formError","setFormError","mins","setMins","minsIsTouched","setMinsIsTouched","minsIsInvalid","minsHasError","secs","setSecs","secsIsTouched","setSecsIsTouched","secsIsInvalid","secsHasError","onSubmit","preventDefault","trim","parseInt","onAddBlock","input","htmlFor","ref","error","placeholder","onBlur","isNaN","CycleSettings","currentCycle","newBlock","Settings","darkModeOn","roundIsResetting","setRoundIsResetting","resetButtonContent","Info","infowrap","href","rel","intro","src","portrait","alt","sns","App","hasLoaded","setHasLoaded","dataJSON","localStorage","getItem","data","JSON","parse","settingsJSON","stringify","setItem","isDarkMode","root","documentElement","style","setProperty","modalIsOpen","setModalIsOpen","modalContent","setModalContent","vh","innerHeight","render"],"mappings":"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","file":"static/js/main.ffd5f30f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Settings_title__qrXuA\",\"option-list__title\":\"Settings_option-list__title__15g6D\",\"warning\":\"Settings_warning__2lemP\",\"option-list\":\"Settings_option-list__1X2aK\",\"option-list__col\":\"Settings_option-list__col__3UoIN\",\"option\":\"Settings_option__2ae6d\",\"option--flex\":\"Settings_option--flex__3q38a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"CycleInput_wrap__1a_Q0\",\"input\":\"CycleInput_input__2P4k1\",\"error\":\"CycleInput_error__1dts0\",\"error-message\":\"CycleInput_error-message__11Ueo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SoundEnableWidget_wrap___FyeL\",\"warning\":\"SoundEnableWidget_warning__FCgec\",\"text\":\"SoundEnableWidget_text__3MQ-3\",\"buttonbox\":\"SoundEnableWidget_buttonbox__3--8S\",\"button\":\"SoundEnableWidget_button__dgesc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zSTUo\",\"wrap\":\"Header_wrap__2kAnP\",\"fa\":\"Header_fa__16L2O\",\"buttonwrap\":\"Header_buttonwrap__VIVIA\",\"button\":\"Header_button__1uGRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"close\":\"Modal_close__Oo4kZ\",\"modal\":\"Modal_modal__4DXUe\",\"tint\":\"Modal_tint__29wjI\",\"slide-down\":\"Modal_slide-down__W3MdX\",\"content\":\"Modal_content__3zUnK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CycleList_list__1k4-2\",\"empty\":\"CycleList_empty__3t8jT\",\"item\":\"CycleList_item__3uz1V\",\"item__content\":\"CycleList_item__content__nSgWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TimerBlock_item__2gO8T\",\"seconds\":\"TimerBlock_seconds__30upA\",\"zero\":\"TimerBlock_zero__32lBx\",\"type\":\"TimerBlock_type__2VR1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VoiceSelect_wrap__3eW8a\",\"select\":\"VoiceSelect_select__2lNpU\",\"option\":\"VoiceSelect_option__2aiap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infowrap\":\"Info_infowrap__216H0\",\"intro\":\"Info_intro__3xJdz\",\"sns\":\"Info_sns__2_YMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Timer_wrapper__1zIMz\",\"empty\":\"Timer_empty__10LaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"round\":\"TimerDisplay_round__3HHr2\",\"list\":\"TimerDisplay_list__2KDNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-switch\":\"ToggleSwitch_toggle-switch__1P3Vp\",\"switch\":\"ToggleSwitch_switch__2zOye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"Frame_frame__Wkpk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"TimerButtons_wrap__1gSUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__6-R6B\"};","const messages = {\n    \"Work\": \"Start working\",\n    \"Breather\": \"Take a breather\",\n    \"Break\": \"Take a break\",\n};\n\nexport default messages;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport messages from \"../messageConfig\";\n\nconst DEFAULT_CYCLE = [\n    {\n        type: \"Work\",\n        seconds: 20 * 60,\n        message: messages[\"Work\"],\n    },\n    {\n        type: \"Breather\",\n        seconds: 30,\n        message: messages[\"Breather\"],\n    },\n    {\n        type: \"Work\",\n        seconds: 20 * 60,\n        message: messages[\"Work\"],\n    },\n    {\n        type: \"Break\",\n        seconds: 10 * 60,\n        message: messages[\"Break\"],\n    },\n];\n\nconst darkModeEnabled =\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\nconst settingsSlice = createSlice({\n    name: \"settings\",\n    initialState: {\n        cycle: DEFAULT_CYCLE,\n        voiceName: \"Karen\", //en-AU default\n        soundOn: true,\n        round: 1,\n        darkMode: darkModeEnabled,\n        darkModeSet: false,\n    },\n    reducers: {\n        setSettings(state, action) {\n            if (action.payload) {\n                state.cycle = action.payload.cycle;\n                state.voiceName = action.payload.voiceName;\n                state.soundOn = action.payload.soundOn;\n                state.round = action.payload.round;\n                state.darkMode = action.payload.darkMode;\n            }\n        },\n        incrementRound(state) {\n            state.round = state.round + 1;\n        },\n        resetRound(state) {\n            state.round = 1;\n        },\n        setSoundOn(state, action) {\n            state.soundOn = action.payload;\n        },\n        setDarkMode(state, action) {\n            // Manual change to dark mode\n            state.darkMode = action.payload;\n            state.darkModeSet = true;\n        },\n        setVoiceName(state, action) {\n            state.voiceName = action.payload;\n        },\n        addToCycle(state, action) {\n            state.cycle.push(action.payload);\n        },\n        removeFromCycle(state, action) {\n            state.cycle.splice(action.payload, 1);\n        },\n    },\n});\n\nexport const settingsActions = settingsSlice.actions;\n\nexport default settingsSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport settingsSlice from \"./settings-slice\";\n\nconst store = configureStore({\n    reducer: {\n        settings: settingsSlice.reducer,\n    },\n});\n\nexport default store;\n","export const formatSeconds = (time) => {\n    const minutes = ~~(time / 60);\n    const seconds = ~~time % 60;\n\n    let returnString = \"\" + minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n    return returnString;\n};\n\nexport const setDarkMode = (isDarkMode) => {\n    const root = document.documentElement;\n\n    if (isDarkMode) {\n        root.style.setProperty(\"--c-text\", \"#FFF\");\n        root.style.setProperty(\"--c-background\", \"#424242\");\n        root.style.setProperty(\"--c-background-rgb\", \"66, 66, 66\");\n    } else {\n        root.style.setProperty(\"--c-text\", \"#444\");\n        root.style.setProperty(\"--c-background\", \"#FFF\");\n        root.style.setProperty(\"--c-background-rgb\", \"255, 255, 255\");\n    }\n};\n","import React from \"react\";\n\nimport s from \"./Header.module.css\";\n\nconst Header = (props) => {\n    return (\n        <header className={s.header}>\n            <div className={s.wrap}>\n                <h1>\n                    <i className=\"fas fa-stopwatch\" aria-hidden=\"true\"></i>\n                    _DevClock\n                </h1>\n                <div className={s.buttonwrap}>\n                    <button\n                        onClick={props.onModalOpen.bind(null, \"info\")}\n                        type=\"button\"\n                        className={s.button}\n                        aria-label=\"Open the app-description modal\"\n                    >\n                        <span className=\"sr-only\">Info</span>\n                        <i\n                            className=\"fas fa-question-circle\"\n                            aria-hidden=\"true\"\n                        ></i>\n                    </button>\n                    <button\n                        onClick={props.onModalOpen.bind(null, \"settings\")}\n                        type=\"button\"\n                        className={s.button}\n                        aria-label=\"Open the settings modal menu\"\n                    >\n                        <span className=\"sr-only\">Settings</span>\n                        <i className=\"fas fa-cog\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport s from \"./Frame.module.css\";\n\nconst Frame = (props) => {\n    return <div className={s.frame}>{props.children}</div>;\n};\n\nexport default Frame;\n","import { useEffect, useReducer, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { formatSeconds } from \"../api/functions\";\n\nimport { settingsActions } from \"../store/settings-slice\";\n\nconst DEFAULT_TIMER_STATE = {\n    cycle: [],\n    index: 0,\n    isTicking: false,\n    requiresReset: false,\n    startTime: false,\n};\n\n/**\n * Reducer Logic\n */\nconst timerReducer = (state, action) => {\n    if (action.type === \"RESET\") {\n        return {\n            cycle: action.cycle,\n            index: 0,\n            isTicking: false,\n            requiresReset: false,\n            endTime: false,\n        };\n    }\n\n    if (action.type === \"STOP\") {\n        return {\n            cycle: state.cycle,\n            index: state.index,\n            isTicking: false,\n            requiresReset: state.requiresReset,\n            endTime: false,\n        };\n    }\n\n    if (action.type === \"START\") {\n        const NOW = Math.floor(new Date().getTime() / 1000);\n        const endTime = NOW + state.cycle[state.index].seconds;\n\n        return {\n            cycle: state.cycle,\n            index: state.index,\n            isTicking: true,\n            requiresReset: state.requiresReset,\n            endTime: endTime,\n        };\n    }\n\n    if (action.type === \"TICK\") {\n        const newCycle = state.cycle.map((block) => ({ ...block }));\n        let newIndex = state.index;\n        let newIsTicking = state.isTicking;\n        let newEndTime = state.endTime;\n        let newRequiresReset = false;\n\n        if (state.isTicking && !state.requiresReset) {\n            const NOW = Math.floor(new Date().getTime() / 1000);\n\n            if (NOW <= state.endTime) {\n                newCycle[newIndex].seconds = state.endTime - NOW;\n                document.title = formatSeconds(newCycle[newIndex].seconds);\n            } else {\n                newIndex++;\n                newRequiresReset = !newCycle[newIndex];\n                if (!newRequiresReset) {\n                    newEndTime = NOW + newCycle[newIndex].seconds;\n                }\n            }\n        }\n\n        return {\n            cycle: newCycle,\n            index: newIndex,\n            isTicking: newIsTicking,\n            requiresReset: newRequiresReset,\n            endTime: newEndTime,\n        };\n    }\n\n    return DEFAULT_TIMER_STATE;\n};\n\n/**\n * Hook Logic\n */\nconst useTimer = () => {\n    const dispatch = useDispatch();\n    /**\n     * State\n     */\n    const settingsCycle = useSelector((store) => store.settings.cycle);\n\n    const [timerState, dispatchTimer] = useReducer(\n        timerReducer,\n        DEFAULT_TIMER_STATE\n    );\n\n    const { cycle, index, isTicking, requiresReset } = timerState;\n\n    /**\n     * State Handlers\n     */\n    const startTimer = useCallback(() => {\n        dispatchTimer({ type: \"START\" });\n    }, [dispatchTimer]);\n\n    const stopTimer = useCallback(\n        () => dispatchTimer({ type: \"STOP\" }),\n        [dispatchTimer]\n    );\n\n    const resetTimer = useCallback(() => {\n        document.title = \"_DevClock\";\n\n        dispatchTimer({\n            type: \"RESET\",\n            cycle: settingsCycle.map((block) => ({ ...block })), // Duplicate object from store->settings->cycle\n        });\n    }, [dispatchTimer, settingsCycle]);\n\n    /**\n     * Launch\n     */\n    // (Re)Initate on load / settings change\n    useEffect(() => resetTimer(), [resetTimer]);\n\n    // Initiate interval\n    useEffect(() => {\n        let interval;\n\n        // Dispatch TICK & update title\n        if (isTicking) {\n            interval = setInterval(() => {\n                dispatchTimer({ type: \"TICK\" });\n            }, 1000);\n        }\n\n        if (requiresReset) {\n            resetTimer();\n            dispatch(settingsActions.incrementRound());\n        }\n\n        return () => clearInterval(interval);\n    }, [isTicking, requiresReset, resetTimer, dispatch]);\n\n    return {\n        cycle,\n        index,\n        isTicking,\n        startTimer,\n        stopTimer,\n        resetTimer,\n    };\n};\n\nexport default useTimer;\n","import { useCallback, useEffect, useState, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst useVoice = () => {\n    const voiceName = useSelector((store) => store.settings.voiceName);\n    const synth = useRef();\n    const [voice, setVoice] = useState([]);\n\n    const updateVoices = useCallback(() => {\n        const browserVoiceArray = synth.current.getVoices();\n\n        let voice = browserVoiceArray.find((item) => voiceName === item.name);\n\n        if (!voice) {\n            voice = browserVoiceArray.find((item) => \"Daniel\" === item.name);\n        }\n\n        setVoice(voice);\n    }, [voiceName]);\n\n    useEffect(() => {\n        if (typeof window !== \"object\" || !window.speechSynthesis) return;\n        synth.current = window.speechSynthesis;\n        synth.current.onvoiceschanged = () => {\n            updateVoices();\n        };\n\n        updateVoices();\n\n        return () => (synth.current.onvoiceschanged = null);\n    }, [updateVoices]);\n\n    const playVoice = useCallback(\n        (message) => {\n            const utterance = new SpeechSynthesisUtterance(message);\n            utterance.lang = voice.lang;\n            utterance.pitch = 1;\n            utterance.rate = 0.9;\n            utterance.volume = 1;\n            utterance.voice = voice;\n\n            speechSynthesis.speak(utterance);\n        },\n        [voice]\n    );\n\n    const stopVoice = useCallback(() => {\n        synth.current.pause();\n        synth.current.cancel();\n    }, []);\n\n    return { playVoice, stopVoice };\n};\n\nexport default useVoice;\n","import React from \"react\";\n\nimport s from \"./TimerBlock.module.css\";\nimport { formatSeconds } from \"../../api/functions\";\n\nconst TimerBlock = (props) => {\n    const { type, seconds, isActive, isFinished, blockIsFinished } = props;\n\n    const displayTime = formatSeconds(seconds);\n\n    let BlockTag = isActive ? \"em\" : \"span\";\n    BlockTag = isFinished ? \"small\" : BlockTag;\n\n    return (\n        <BlockTag\n            className={`${s.item} ${isActive && blockIsFinished && s.zero}`}\n        >\n            <div className={s.seconds}>{displayTime}</div>\n            <p className={s.type}>{type}</p>\n        </BlockTag>\n    );\n};\n\nexport default TimerBlock;\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport s from \"./TimerDisplay.module.css\";\nimport TimerBlock from \"./TimerBlock\";\n\nconst TimerDisplay = (props) => {\n    const round = useSelector((store) => store.settings.round);\n\n    const { cycle, index: activeIndex, blockIsFinished } = props;\n\n    return (\n        <Fragment>\n            <p className={s.round}>Round {round}</p>\n            <div className={s.list}>\n                {cycle.map((item, index) => {\n                    let isFinished = false;\n\n                    if (index < activeIndex) {\n                        isFinished = true;\n                    }\n\n                    const key = item.type + Math.random() * 100;\n                    const isActive = index === activeIndex;\n\n                    return (\n                        <TimerBlock\n                            key={key}\n                            type={item.type}\n                            seconds={item.seconds}\n                            isActive={isActive}\n                            isFinished={isFinished}\n                            blockIsFinished={blockIsFinished}\n                        />\n                    );\n                })}\n            </div>\n        </Fragment>\n    );\n};\n\nexport default TimerDisplay;\n","import s from \"./Button.module.css\";\n\nconst Button = (props) => {\n    const { className, type, ...otherProps } = props;\n\n    return (\n        <button\n            type={type || \"button\"}\n            className={`${s.button} ${className}`}\n            {...otherProps}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport s from \"./TimerButtons.module.css\";\nimport Button from \"../UI/Button\";\n\nconst TimerButtons = (props) => {\n    const {\n        onStart: startHandler,\n        onStop: stopHandler,\n        onReset: resetHandler,\n        blockIsFinished,\n    } = props;\n\n    return (\n        <div className={s.wrap}>\n            <Button\n                disabled={props.isTicking || blockIsFinished}\n                onClick={startHandler}\n            >\n                Start\n            </Button>\n            <Button\n                disabled={!props.isTicking || blockIsFinished}\n                onClick={stopHandler}\n            >\n                Stop\n            </Button>\n            <Button onClick={resetHandler}>Reset</Button>\n        </div>\n    );\n};\n\nexport default React.memo(TimerButtons);\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport s from \"./SoundEnableWidget.module.css\";\nimport Button from \"../UI/Button\";\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst SoundEnableWidget = (props) => {\n    const enableHandler = () => {\n        props.onEnable(true);\n    };\n\n    const disableHandler = () => {\n        props.onEnable(false);\n    };\n\n    return (\n        <Fragment>\n            {ReactDOM.createPortal(\n                <div className={s.wrap}>\n                    <p className={s.text}>\n                        <i\n                            className={`${s.warning} fas fa-exclamation-triangle`}\n                            aria-hidden=\"true\"\n                        ></i>\n                        Audio auto-play is disabled by default on mobile\n                        devices. Do you want to enable sound?\n                    </p>\n                    <div className={s.buttonbox}>\n                        <Button className={s.button} onClick={disableHandler}>\n                            Leave disabled\n                        </Button>\n                        <Button className={s.button} onClick={enableHandler}>\n                            Enable sound\n                        </Button>\n                    </div>\n                </div>,\n                portalElement\n            )}\n        </Fragment>\n    );\n};\n\nexport default SoundEnableWidget;\n","import React, { useEffect, Fragment, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isMobile } from \"react-device-detect\";\n\nimport useTimer from \"../../hooks/use-timer\";\nimport useVoice from \"../../hooks/use-voice\";\n\nimport s from \"./Timer.module.css\";\nimport TimerDisplay from \"./TimerDisplay\";\nimport TimerButtons from \"./TimerButtons\";\nimport SoundEnableWidget from \"../Layout/SoundEnableWidget\";\n\nlet blockIsFinished = false;\n\nconst Timer = (props) => {\n    const soundOn = useSelector((store) => store.settings.soundOn);\n\n    const { cycle, index, isTicking, startTimer, stopTimer, resetTimer } =\n        useTimer();\n\n    /**\n     * Block Finished, Synth Voice\n     */\n    const { playVoice, stopVoice } = useVoice();\n\n    const currentBlock = cycle[index];\n    const nextBlock = cycle[index + 1];\n\n    useEffect(() => {\n        let timer;\n\n        if (currentBlock && currentBlock.seconds === 0) {\n            blockIsFinished = true;\n            stopTimer();\n\n            if (soundOn) {\n                if (nextBlock) {\n                    console.log(\"playvoice\");\n                    playVoice(nextBlock.message);\n                } else {\n                    console.log(\"playvoice\");\n                    playVoice(\"Cycle has been reset. Start again\");\n                }\n            }\n\n            timer = setTimeout(() => {\n                startTimer();\n                blockIsFinished = false;\n            }, 3000);\n        }\n\n        return () => clearTimeout(timer);\n    }, [\n        currentBlock,\n        nextBlock,\n        playVoice,\n        cycle,\n        index,\n        stopTimer,\n        startTimer,\n        soundOn,\n    ]);\n\n    /**\n     * Reset\n     */\n    const resetHandler = () => {\n        blockIsFinished = false;\n        stopVoice();\n        resetTimer();\n    };\n\n    /**\n     * Mobile Sound Enabling\n     */\n\n    const [mobileSoundEnabled, setMobileSoundEnabled] = useState(false);\n\n    const mobileEnableSoundHandler = (enabled) => {\n        if (enabled) {\n            playVoice(\" \");\n        }\n\n        setMobileSoundEnabled(true);\n    };\n\n    /**\n     * JSX Content\n     */\n\n    let content = (\n        <div className={s.empty}>\n            No time-blocks found.\n            <br /> Please create a cycle in the settings menu\n        </div>\n    );\n\n    if (cycle.length > 0) {\n        content = (\n            <Fragment>\n                <TimerDisplay\n                    cycle={cycle}\n                    index={index}\n                    blockIsFinished={blockIsFinished}\n                />\n                <TimerButtons\n                    isTicking={isTicking}\n                    onStart={startTimer}\n                    onStop={stopTimer}\n                    onReset={resetHandler}\n                    blockIsFinished={blockIsFinished}\n                />\n                {isMobile && !mobileSoundEnabled && (\n                    <SoundEnableWidget onEnable={mobileEnableSoundHandler} />\n                )}\n            </Fragment>\n        );\n    }\n\n    return <main className={s.wrapper}>{content}</main>;\n};\n\nexport default Timer;\n","import { Fragment, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport s from \"./Modal.module.css\";\n\nconst Backdrop = (props) => {\n    return <div className={s.backdrop} onClick={props.onClose} />;\n};\n\nconst ModalOverlay = (props) => {\n    return (\n        <Fragment>\n            <button className={s.close} type=\"button\" onClick={props.onClose}>\n                <span className=\"sr-only\">Close</span>\n                <i className=\"fas fa-times\" aria-hidden=\"true\"></i>\n            </button>\n            <div className={s.tint} aria-hidden=\"true\"></div>\n            <div className={s.modal}>\n                <div className={s.content}>{props.children}</div>\n            </div>\n        </Fragment>\n    );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n    /**\n     * Close with ESC\n     */\n    useEffect(() => {\n        function keyListener(e) {\n            if (e.keyCode === 27) {\n                props.onClose();\n            }\n        }\n\n        document.addEventListener(\"keydown\", keyListener);\n\n        return () => document.removeEventListener(\"keydown\", keyListener);\n    });\n\n    return (\n        <Fragment>\n            {ReactDOM.createPortal(\n                <Backdrop onClose={props.onClose} />,\n                portalElement\n            )}\n            {ReactDOM.createPortal(\n                <ModalOverlay onClose={props.onClose}>\n                    {props.children}\n                </ModalOverlay>,\n                portalElement\n            )}\n        </Fragment>\n    );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport s from \"./ToggleSwitch.module.css\";\n\nconst ToggleSwitch = (props) => {\n    const toggleHandler = (event) => {\n        props.onToggle(event.target.checked);\n    };\n\n    return (\n        <div className={s[\"toggle-switch\"]}>\n            <input\n                id={props.id}\n                type=\"checkbox\"\n                checked={props.isChecked}\n                onChange={toggleHandler}\n            />\n            <span className={s[\"switch\"]} />\n        </div>\n    );\n};\nexport default ToggleSwitch;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport s from \"./VoiceSelect.module.css\";\n\nconst VoiceSelect = (props) => {\n    const synth = useRef();\n    const { currentVoiceName, onVoiceSelect } = props;\n    const [voices, setVoices] = useState([]);\n\n    const updateVoices = () => {\n        setVoices(synth.current.getVoices());\n    };\n\n    useEffect(() => {\n        if (typeof window !== \"object\" || !window.speechSynthesis) return;\n        synth.current = window.speechSynthesis;\n        synth.current.onvoiceschanged = updateVoices;\n        updateVoices();\n\n        return () => {\n            synth.current.onvoiceschanged = null;\n        };\n    }, []);\n\n    const handleVoiceChange = (e) => {\n        const newVoice = voices.filter(\n            (item) => item.name === e.target.value\n        )[0];\n\n        onVoiceSelect(newVoice.name);\n    };\n\n    return (\n        <div className={s.wrap}>\n        <select\n            className={s.select}\n            value={currentVoiceName ? currentVoiceName : \"\"}\n            onChange={handleVoiceChange}\n        >\n            {voices.map((voice) => (\n                <option\n                    key={voice.name}\n                    value={voice.name}\n                    className={s.option}\n                >{`${voice.name}`}</option>\n            ))}\n        </select>\n        </div>\n    );\n};\n\nexport default VoiceSelect;\n","import { formatSeconds } from \"../../api/functions\";\n\nimport s from \"./CycleList.module.css\";\n\nconst CycleItem = (props) => {\n    const { name, seconds, onRemove } = props;\n    const secondsDisplay = formatSeconds(seconds);\n\n    return (\n        <li className={s[\"item\"]}>\n            <span>{name}</span>\n            <div className={s[\"item__content\"]}>\n                <span>{secondsDisplay}</span>\n                <button\n                    className={s[\"item__content\"]}\n                    type=\"button\"\n                    onClick={onRemove}\n                >\n                    <span className=\"sr-only\">Remove Item</span>\n                    <i className=\"fas fa-minus-circle\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n        </li>\n    );\n};\n\nconst CycleList = (props) => {\n    const removeBlockHandler = (index) => {\n        props.onRemoveBlock(index);\n    };\n\n    let listContent;\n\n    if (props.cycle.length <= 0) {\n        listContent = <li className={s.empty}>[ Your added cycles will appear here ]</li>;\n    } else {\n        listContent = props.cycle.map((block, index) => {\n            const key = Math.random() * 100;\n\n            return (\n                <CycleItem\n                    key={key}\n                    name={block.type}\n                    seconds={block.seconds}\n                    onRemove={removeBlockHandler.bind(null, index)}\n                />\n            );\n        });\n    }\n\n    return <ul className={s[\"list\"]}>{listContent}</ul>;\n};\nexport default CycleList;\n","import { Fragment, useRef, useState } from \"react\";\n\nimport messages from \"../../messageConfig\";\n\nimport s from \"./CycleInput.module.css\";\n\nconst typeOptions = [];\n\nfor (const key in messages) {\n    typeOptions.push(\n        <option key={key} value={key}>\n            {key}\n        </option>\n    );\n}\n\nconst CycleInput = (props) => {\n    const typeRef = useRef();\n    let errorMessage = \"\";\n    const [formError, setFormError] = useState(\"\");\n\n    /**\n     * Mins\n     */\n    const [mins, setMins] = useState(\"\");\n    const [minsIsTouched, setMinsIsTouched] = useState(false);\n\n    const minsIsInvalid = mins < 0 || mins > 90;\n    const minsHasError = minsIsTouched && minsIsInvalid;\n\n    if (minsHasError) {\n        errorMessage += \"Please enter an amount of minutes between 0 and 90. \";\n    }\n\n    const minsBlurHandler = () => setMinsIsTouched(true);\n    const minsChangeHandler = (event) => {\n        let value = parseInt(event.target.value);\n        if (isNaN(value)) value = \"\";\n        setMins(value);\n    };\n\n    /**\n     * Secs\n     */\n    const [secs, setSecs] = useState(\"\");\n    const [secsIsTouched, setSecsIsTouched] = useState(false);\n\n    const secsIsInvalid = secs > 59 || secs < 0;\n    const secsHasError = secsIsTouched && secsIsInvalid;\n\n    if (secsHasError) {\n        errorMessage += \"Please enter a valid amount of seconds. \";\n    }\n\n    const secsBlurHandler = () => setSecsIsTouched(true);\n    const secsChangeHandler = (event) => {\n        let value = parseInt(event.target.value);\n        if (isNaN(value)) value = \"\";\n        setSecs(value);\n    };\n\n    /**\n     * Submit\n     */\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const type = typeRef.current.value;\n\n        if (secsIsInvalid || minsIsInvalid) {\n            return;\n        }\n\n        if (type.trim() === \"\") {\n            setFormError(\n                \"Something went horribly wrong. Please refresh the page and try again.\"\n            );\n            return;\n        }\n\n        if (mins * 60 + secs <= 0) {\n            setFormError(\"Please enter an amount of time greater than 0\");\n            return;\n        }\n\n        console.log();\n\n        const block = {\n            type: type,\n            seconds: parseInt(mins * 60 + secs),\n            message: messages[type],\n        };\n\n        props.onAddBlock(block);\n\n        setFormError(\"\");\n        setSecs(\"\");\n        setMins(\"\");\n    };\n\n    return (\n        <Fragment>\n            <form className={s.wrap} onSubmit={submitHandler}>\n                <div className={s.input}>\n                    <label htmlFor=\"type\">Block Type</label>\n                    <select id=\"type\" name=\"type\" ref={typeRef}>\n                        {typeOptions}\n                    </select>\n                </div>\n                <div className={`${s.input} ${minsHasError && s.error}`}>\n                    <label htmlFor=\"type\">Minutes</label>\n                    <input\n                        type=\"number\"\n                        name=\"mins\"\n                        placeholder=\"00\"\n                        value={mins}\n                        onBlur={minsBlurHandler}\n                        onChange={minsChangeHandler}\n                    />\n                </div>\n                <div className={`${s.input} ${secsHasError && s.error}`}>\n                    <label htmlFor=\"type\">Secs</label>\n                    <input\n                        type=\"number\"\n                        name=\"secs\"\n                        placeholder=\"00\"\n                        value={secs}\n                        onBlur={secsBlurHandler}\n                        onChange={secsChangeHandler}\n                    />\n                </div>\n                <button type=\"submit\">\n                    <span className=\"sr-only\">Add Current Item</span>\n                    <i className=\"fas fa-plus-circle\" aria-hidden=\"true\"></i>\n                </button>\n            </form>\n            {(errorMessage || formError) && (\n                <p className={s[\"error-message\"]}>{errorMessage + formError}</p>\n            )}\n        </Fragment>\n    );\n};\nexport default CycleInput;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { settingsActions } from \"./../../store/settings-slice\";\n\nimport s from \"./Settings.module.css\";\nimport ToggleSwitch from \"../UI/ToggleSwitch\";\nimport VoiceSelect from \"./VoiceSelect\";\nimport CycleSettings from \"./CycleSettings\";\nimport Button from \"../UI/Button\";\n\nlet roundResetTimer;\n\nconst Settings = (props) => {\n    const dispatch = useDispatch();\n    const settings = useSelector((store) => store.settings);\n\n    /**\n     * Sound Logic\n     */\n    const soundOn = settings.soundOn;\n    const soundToggleHandler = (isChecked) => {\n        dispatch(settingsActions.setSoundOn(isChecked));\n    };\n\n    /**\n     * Dark Mode Logic\n     */\n    const darkModeOn = settings.darkMode;\n    const darkModeToggleHandler = (isChecked) => {\n        dispatch(settingsActions.setDarkMode(isChecked));\n    };\n\n    /**\n     * Voice Logic\n     */\n    const currentVoiceName = settings.voiceName;\n    const voiceChangeHandler = (voiceName) => {\n        dispatch(settingsActions.setVoiceName(voiceName));\n    };\n\n    /**\n     * Round Logic\n     */\n    const [roundIsResetting, setRoundIsResetting] = useState(false);\n\n    const resetRoundHandler = () => {\n        dispatch(settingsActions.resetRound());\n        setRoundIsResetting(true);\n\n        roundResetTimer = setTimeout(() => {\n            setRoundIsResetting(false);\n        }, 2000);\n    };\n\n    useEffect(() => {\n        return () => clearTimeout(roundResetTimer);\n    }, []);\n\n    let resetButtonContent = \"Reset Round Counter\";\n\n    if (roundIsResetting) {\n        resetButtonContent = (\n            <Fragment>\n                Round counter reset <i className=\"fas fa-check\"></i>\n            </Fragment>\n        );\n    }\n\n    /**\n     * JSX Return\n     */\n    return (\n        <Fragment>\n            <h2 className={s[\"title\"]}>Settings</h2>\n            <div className={s[\"option-list\"]}>\n                <div className={s[\"option-list__col\"]}>\n                    <h3 className={s[\"option-list__title\"]}>APP</h3>\n                    <ul>\n                        <li className={`${s[\"option\"]} ${s[\"option--flex\"]}`}>\n                            <label htmlFor=\"sound\">Sound</label>\n                            <ToggleSwitch\n                                id=\"sound\"\n                                onToggle={soundToggleHandler}\n                                isChecked={soundOn}\n                            />\n                        </li>\n                        <li className={`${s[\"option\"]} ${s[\"option--flex\"]}`}>\n                            <label htmlFor=\"darkmode\">Dark Mode</label>\n                            <ToggleSwitch\n                                id=\"darkmode\"\n                                onToggle={darkModeToggleHandler}\n                                isChecked={darkModeOn}\n                            />\n                        </li>\n                        <li className={`${s[\"option\"]} ${s[\"option--flex\"]}`}>\n                            <label>Voice</label>\n                            <VoiceSelect\n                                currentVoiceName={currentVoiceName}\n                                onVoiceSelect={voiceChangeHandler}\n                            />\n                        </li>\n                        <li className={`${s[\"option\"]}`}>\n                            <Button\n                                id=\"count-reset\"\n                                onClick={resetRoundHandler}\n                                className={`${\n                                    roundIsResetting && \"updated-mode\"\n                                }`}\n                            >\n                                {resetButtonContent}\n                            </Button>\n                        </li>\n                    </ul>\n                </div>\n                <div className={s[\"option-list__col\"]}>\n                    <h3 className={s[\"option-list__title\"]}>CYCLE</h3>\n                    <ul>\n                        <li className={`${s[\"option\"]}`}>\n                            <p className={`${s[\"warning\"]}`}>\n                                *Edits to the cycle will reset the timer\n                            </p>\n                            <CycleSettings />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Settings;\n","import { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { settingsActions } from \"../../store/settings-slice\";\n\nimport CycleList from \"./CycleList\";\nimport CycleInput from \"./CycleInput\";\n\nconst CycleSettings = (props) => {\n    const dispatch = useDispatch();\n    const currentCycle = useSelector((store) => store.settings.cycle);\n\n    const addBlockHandler = (newBlock) => {\n        dispatch(settingsActions.addToCycle(newBlock));\n    };\n\n    const removeBlockHandler = (index) => {\n        dispatch(settingsActions.removeFromCycle(index));\n    };\n\n    return (\n        <Fragment>\n            <CycleList\n                cycle={currentCycle}\n                onRemoveBlock={removeBlockHandler}\n            />\n            {currentCycle.length < 8 && (\n                <CycleInput onAddBlock={addBlockHandler} />\n            )}\n        </Fragment>\n    );\n};\n\nexport default CycleSettings;\n","export default __webpack_public_path__ + \"static/media/dp-170x170.007ed9ce.jpg\";","import s from \"./Info.module.css\";\nimport portrait from \"./dp-170x170.jpg\";\n\nconst Info = () => {\n    return (\n        <div className={s.infowrap}>\n            <h2>How to use this app</h2>\n            <p>\n                This is a{\" \"}\n                <a\n                    href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    pomodoro-style\n                    <i\n                        className=\"fas fa-external-link-alt\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </a>{\" \"}\n                productivity app that automatically manages time cycles that you\n                can customise yourself.\n                <br />\n                Create your custom cyclical stopwatch by adding and removing\n                time-blocks in the 'Cycle' portion of the Settings (\n                <i className=\"fas fa-cog\" aria-hidden=\"true\"></i>) menu.\n                <br />\n                Interact with the timer by using the Start/Stop buttons. <br />\n                Once started, the timer will automatically tick, and a\n                computer-generated voice will alert you at the end of each time\n                block as of what to do next. <br />\n                The amount of times you have completed the cycle is represented\n                by the 'round' counter above the timer display. This number can\n                be reset back to one in the settings.\n            </p>\n            <h2>Features of this app</h2>\n            <ul>\n                <li>Saving of settings between visits</li>\n                <li>Customisable Cycles</li>\n                <li>Customisable announcer</li>\n                <li>Dark Mode</li>\n                <li>Responsive design</li>\n            </ul>\n            <h2>Why &amp; how it was made</h2>\n            <p>\n                As a dev I found myself staring at the screen for way too long,\n                without resting my eyes or drinking enough water. So I wanted to\n                design a cyclical stopwatch app that would automatically tell me\n                when to look away from the screen (i.e. when using the{\" \"}\n                <a\n                    href=\"https://www.medicalnewstoday.com/articles/321536\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    20/20/20\n                    <i\n                        className=\"fas fa-external-link-alt\"\n                        aria-hidden=\"true\"\n                    ></i>\n                </a>{\" \"}\n                rule), when to take longer breaks, and when to get back to work\n            </p>\n            <p>\n                This is the first React App I have made, and at the time of\n                making it I was halfway through completing my React course on\n                Udemy, and wanted a task to re-enforce what I was learning.{\" \"}\n                <br />\n            </p>\n            <p>It is made with the following tools:</p>\n            <ul>\n                <li>\n                    React\n                    <ul>\n                        <li>100% function-based components</li>\n                        <li>React Hooks</li>\n                        <li>Custom React Hooks</li>\n                        <li>React Redux (Redux Toolkit /w Slices)</li>\n                        <li>CSS Modules</li>\n                    </ul>\n                </li>\n                <li>The localStorage API to store settings between visits</li>\n                <li>\n                    The built-in browser{\" \"}\n                    <a\n                        href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        SpeechSynthesis\n                        <i\n                            className=\"fas fa-external-link-alt\"\n                            aria-hidden=\"true\"\n                        ></i>\n                    </a>{\" \"}\n                    API\n                </li>\n                <li>\n                    <a\n                        href=\"https://fontawesome.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        FontAwesome\n                        <i\n                            className=\"fas fa-external-link-alt\"\n                            aria-hidden=\"true\"\n                        ></i>\n                    </a>{\" \"}\n                    for icons\n                </li>\n            </ul>\n\n            <h2>The author – Sean Verity</h2>\n            <div className={s.intro}>\n                <img src={portrait} alt=\"Portrait of Sean Verity\" />\n                <div>\n                    <p>\n                        Web developer &amp; translator, living in Himeji, Japan.{\" \"}\n                        <br />\n                        In charge of development at my agency,{\" \"}\n                        <a\n                            href=\"https://kuragedigital.com/\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Kurage Digital JP\n                            <i\n                                className=\"fas fa-external-link-alt\"\n                                aria-hidden=\"true\"\n                            ></i>\n                        </a>\n                        <br />\n                        Full time dingus, drinker of tap water (among other\n                        skills)\n                    </p>\n                </div>\n            </div>\n            <p className={s.sns}>\n                <a\n                    href=\"https://github.com/veritasnz/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span className=\"sr-only\">Github page</span>\n                    <i className=\"fab fa-github\" aria-hidden=\"true\"></i>\n                </a>\n                <a\n                    href=\"https://linkedin.com/in/sean-verity\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span className=\"sr-only\">LinkedIn page</span>\n                    <i className=\"fab fa-linkedin\" aria-hidden=\"true\"></i>\n                </a>\n                <a\n                    href=\"https://twitter.com/veritas_nz\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span className=\"sr-only\">LinkedIn page</span>\n                    <i className=\"fab fa-twitter\" aria-hidden=\"true\"></i>\n                </a>\n            </p>\n\n            <h2>App To-do list</h2>\n            <h3>Necessary</h3>\n            <ul>\n                <li>Android testing &amp; bugfixes</li>\n                <li>\n                    Various refactoring &amp; performance improvements – there\n                    are large component-tree re-renders on each stopwatch tick\n                </li>\n                <li>\n                    Accessibility\n                    <ul>\n                        <li>Move keyboard focus to modal on open</li>\n                        <li>\n                            Moving of keyboard focus to the modals when they\n                            open\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n            <h3>Features</h3>\n            <ul>\n                <li>\n                    Customisable block-type names and their corresponding voice\n                    messages\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Info;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setDarkMode } from \"./api/functions\";\nimport { settingsActions } from \"./store/settings-slice\";\n\nimport Header from \"./components/Layout/Header\";\nimport Frame from \"./components/Layout/Frame\";\nimport Timer from \"./components/Timer/Timer\";\nimport Modal from \"./components/UI/Modal\";\nimport Settings from \"./components/Settings/Settings\";\nimport Info from \"./components/Info/Info\";\n\nconst App = () => {\n    /**\n     * Load localStorage on launch\n     */\n    const dispatch = useDispatch();\n    const [hasLoaded, setHasLoaded] = useState(false);\n\n    useEffect(() => {\n        if (!hasLoaded) {\n            const dataJSON = localStorage.getItem(\"settings\");\n            const data = JSON.parse(dataJSON);\n            dispatch(settingsActions.setSettings(data));\n        }\n\n        setHasLoaded(true);\n    }, [dispatch]); // eslint-disable-line\n\n    /**\n     * Update localStorage on change\n     */\n    const settings = useSelector((store) => store.settings);\n\n    useEffect(() => {\n        const settingsJSON = JSON.stringify(settings);\n        localStorage.setItem(\"settings\", settingsJSON);\n    }, [settings]);\n\n    const { darkMode, soundOn } = settings;\n\n    /**\n     * Set Dark Mode\n     */\n\n    useEffect(() => {\n        setDarkMode(darkMode);\n    }, [darkMode]);\n\n    /**\n     * Modal state setup\n     */\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [modalContent, setModalContent] = useState(\"\");\n\n    const modalOpenHandler = (content) => {\n        setModalContent(content);\n        setModalIsOpen(true);\n    };\n\n    const modalCloseHandler = (content) => {\n        setModalIsOpen(false);\n    };\n\n    return (\n        <Fragment>\n            <Header onModalOpen={modalOpenHandler} />\n            <Frame>\n                <Timer soundOn={soundOn} />\n            </Frame>\n            {modalIsOpen && (\n                <Modal onClose={modalCloseHandler}>\n                    {modalContent === \"settings\" && <Settings />}\n                    {modalContent === \"info\" && <Info />}\n                </Modal>\n            )}\n        </Fragment>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./store/index\";\nimport App from \"./App\";\nimport \"./reset.css\";\nimport \"./style.css\";\n\nconst vh = window.innerHeight * 0.01;\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}